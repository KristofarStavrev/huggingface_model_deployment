services:
  fastapi:
    build:
      context: .
      dockerfile: docker/fastapi.Dockerfile
    environment:
      - PROMETHEUS_METRICS_USER=${PROMETHEUS_METRICS_USER}
      - PROMETHEUS_METRICS_PASS=${PROMETHEUS_METRICS_PASS}
    container_name: fastapi
    image: "${REGISTRY_URL}/khstavrev/fastapi-app:latest"
    ports:
      - "8000:8000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://fastapi:8000/docs"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  gradio:
    build:
      context: .
      dockerfile: docker/gradio.Dockerfile
    container_name: gradio
    image: "${REGISTRY_URL}/khstavrev/gradio-app:latest"
    ports:
      - "7860:7860"
    depends_on:
      fastapi:
        condition: service_healthy
    restart: always

  promtail:
    image: grafana/promtail:3.4.3
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/log:ro
      - ./promtail:/etc/promtail
    environment:
      - LOKI_URL=${LOKI_URL}
    command: -config.file=/etc/promtail/promtail-config.yml -config.expand-env=true
    restart: always
