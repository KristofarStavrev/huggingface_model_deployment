name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushing to the main branch or merging into it
    tags:
      - 'v*'  # Trigger on versioned tags

permissions:
  contents: write # Used for the automatic releases

jobs:
  test:
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, sentiment-app-master] # Running on a self-hosted runner
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build and run tests in Docker
        run: |
          docker build -t sentiment-app-test -f docker/testjob.Dockerfile .
          docker run --rm sentiment-app-test

  build:
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, sentiment-app-master] # Running on a self-hosted runner
    outputs:
      chart_version: ${{ steps.get_version.outputs.version }}
    needs: test  # This job will run after the test job

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.18.1

      # Log in to Self-Hosted Docker Registry
      - name: Log in to Self-Hosted Registry
        run: |
          echo "${{ secrets.LOCAL_IMG_REG_PASS }}" | docker login ${{ secrets.LOCAL_IMG_REG_IP }} -u ${{ secrets.LOCAL_IMG_REG_USER }} --password-stdin

      # Build the Docker image (fastapi and gradio)
      - name: Build Docker Images
        run: |
          REGISTRY_URL=${{ secrets.LOCAL_IMG_REG_IP }} docker compose -f docker-compose.yml build
      
      # Push Docker images to Docker Hub
      - name: Push Docker Images
        run: |
          REGISTRY_URL=${{ secrets.LOCAL_IMG_REG_IP }} docker compose -f docker-compose.yml push

      # Get the Helm chart version
      - name: Extract chart version
        id: get_version
        run: |
          VERSION=$(grep '^version:' helm-chart-sentiment-app/Chart.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Create a helm package
      - name: Create Helm Package
        run: |
          helm package ./helm-chart-sentiment-app/

      # Log in to the self-hosted Helm registry (Docker registry)
      - name: Helm login to registry
        run: |
          echo "${{ secrets.LOCAL_IMG_REG_PASS }}" | helm registry login ${{ secrets.LOCAL_IMG_REG_IP }} -u ${{ secrets.LOCAL_IMG_REG_USER }} --password-stdin

      # Push Helm chart to self-hosted registry
      - name: Push Helm chart to registry
        run: helm push helm-chart-sentiment-app-${{ steps.get_version.outputs.version }}.tgz oci://${{ secrets.LOCAL_IMG_REG_IP }}/helm-charts

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, sentiment-app-master] # Running on a self-hosted runner
    needs: build  # This job will run after the build job

    steps:
      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.18.1

      # K8s connection config
      - name: Write kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      # Log in to Self-Hosted Docker Registry
      - name: Log in to Helm OCI registry
        run: |
          echo "${{ secrets.LOCAL_IMG_REG_PASS }}" | helm registry login ${{ secrets.LOCAL_IMG_REG_IP }} -u ${{ secrets.LOCAL_IMG_REG_USER }} --password-stdin
      
      # Deploy the application using Helm
      - name: Deploy with Helm
        run: |
          helm upgrade --install sentiment-app \
            oci://${{ secrets.LOCAL_IMG_REG_IP }}/helm-charts/helm-chart-sentiment-app \
            --version ${{ needs.build.outputs.chart_version }} \
            --set-string image_repository="${{ secrets.LOCAL_IMG_REG_IP }}/khstavrev/" \
            --set-string fast_api_secret_prometheus_user="${{ secrets.PROMETHEUS_METRICS_USER }}" \
            --set-string fast_api_secret_prometheus_password="${{ secrets.PROMETHEUS_METRICS_PASS }}"

  release:
    runs-on: [self-hosted, sentiment-app-master]
    if: startsWith(github.ref, 'refs/tags/')  # Only runs if a tag is pushed

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.18.1

      # Log in to the self-hosted Helm registry (Docker registry)
      - name: Helm login to registry
        run: |
          echo "${{ secrets.LOCAL_IMG_REG_PASS }}" | helm registry login ${{ secrets.LOCAL_IMG_REG_IP }} -u ${{ secrets.LOCAL_IMG_REG_USER }} --password-stdin

      # Get the Helm chart version
      - name: Extract chart version
        id: get_version
        run: |
          VERSION=$(grep '^version:' helm-chart-sentiment-app/Chart.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Pull Helm chart to self-hosted registry
      - name: Pull latest Helm chart from registry
        run: |
          helm pull oci://${{ secrets.LOCAL_IMG_REG_IP }}/helm-charts/helm-chart-sentiment-app \
            --version ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release for version ${{ github.ref_name }}."
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            helm-chart-sentiment-app-${{ steps.get_version.outputs.version }}.tgz
